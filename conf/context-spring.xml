<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                                http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
                                                http://www.springframework.org/schema/util 
                                                http://www.springframework.org/schema/util/spring-util-2.0.xsd
                                                http://activemq.apache.org/camel/schema/spring
                                                http://activemq.apache.org/camel/schema/spring/camel-spring.xsd">

	<camelContext id="camelQuartz"
		xmlns="http://activemq.apache.org/camel/schema/spring">
		<route>
			<from uri="quartz://meddius/exceptionThrower/0/*/*/*/*/$" />
			<process ref="exceptionThrower" />
		</route>
		<route>
			<from uri="quartz://meddius/exceptionChecker/0/0,5,10,15,20,25,30,35,40,45,50,55/*/*/*/$" />
			<process ref="exceptionChecker" />
		</route>
	</camelContext>

	<bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:/test-DS</value>
		</property>
	</bean>

	<bean id="jmsDataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:/mysql-DS</value>
		</property>
	</bean>

	<bean id="exceptionThrower"
		class="com.beckproduct.camel.processor.ExceptionThrower" />

	<bean id="exceptionChecker"
		class="com.beckproduct.camel.processor.ExceptionChecker">
		<property name="repository">
			<ref local="logEntryRepository" />
		</property>
	</bean>

	<bean id="autoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
		<property name="beanNames">
			<list>
				<value>logEntryRepository</value>
			</list>
		</property>
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="logEntryRepository">
					PROPAGATION_REQUIRED
				</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="annotationSessionFactoryBean" />
		</property>
	</bean>

	<bean id="annotationSessionFactoryBean"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.beckproduct.domain.LogEntry</value>
			</list>
		</property>
	</bean>

	<bean id="exceptionListener"
		class="com.beckproduct.jms.listener.ExceptionListenerImpl">
		<property name="repository">
			<ref local="logEntryRepository" />
		</property>
	</bean>

	<bean id="logEntryRepository"
		class="com.beckproduct.repository.LogEntryRepository">
		<property name="sessionFactory">
			<ref local="annotationSessionFactoryBean" />
		</property>
	</bean>

	<bean id="exceptionQueue"
		class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>exceptionQueue</value>
		</constructor-arg>
	</bean>

	<bean id="connectionFactory"
		class="org.apache.activemq.spring.ActiveMQConnectionFactory">
		<property name="brokerURL">
			<value>tcp://fest.local:6969</value>
		</property>
	</bean>

	<bean id="exceptionContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="exceptionQueue" />
		<property name="messageListener" ref="exceptionListener" />
	</bean>

	<bean id="broker" class="org.apache.activemq.broker.BrokerService"
		init-method="start" destroy-method="stop">
		<property name="brokerName" value="broker" />
		<property name="persistent" value="true" />
		<property name="useJmx" value="false" />
		<property name="transportConnectorURIs">
			<list>
				<value>tcp://fest.local:6969</value>
			</list>
		</property>
		<property name="persistenceAdapter" ref="persistenceAdapter" />
	</bean>

	<bean name="persistenceAdapter"
		class="org.apache.activemq.store.PersistenceAdapterFactoryBean">
		<property name="dataSource" ref="jmsDataSource" />
		<property name="createTablesOnStartup" value="true" />
		<property name="dataDirectory">
			<value>../active-mq/test</value>
		</property>
		<property name="journalLogFiles" value="5" />
		<property name="useDatabaseLock" value="false" />
	</bean>

	<bean name="meddius-ds"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url">
			<value>
				jdbc:mysql://localhost/exceptions?relaxAutoCommit=true
			</value>
		</property>
		<property name="username" value="root" />
		<property name="password" value="" />
		<property name="poolPreparedStatements" value="true" />
	</bean>

	<bean name="activemq-ds"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url">
			<value>
				jdbc:mysql://localhost/exceptions_jms?relaxAutoCommit=true
			</value>
		</property>
		<property name="username" value="root" />
		<property name="password" value="" />
		<property name="poolPreparedStatements" value="true" />
	</bean>
</beans>